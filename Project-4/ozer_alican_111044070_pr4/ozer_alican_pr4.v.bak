module ozer_alican_pr4( output [31:0] result);
	wire [5:0] opcode;
	wire [4:0] rs,rt;
	wire [15:0] immediate16;
	
	wire [31:0] immediate32,pc_in,pc_out;
	wire [31:0] reg32;
	wire carryOut,zero,overFlow;
	wire [31:0] myData;
	
	//modul aralarına kablo
	wire [31:0] RSvalue,RTvalue;	
	wire [31:0] alu_in,alu_out,toReg;
	
	//modul bağlantıları
	pcModul PC(.PC_in(pc_in),.PC_out(pc_out));
	instMemory imModul(.PCin(pc_out),.instruction(reg32));	
	
	//gelen registerı parçala
	assign {opcode,rs,rt,immediate16} = reg32;
	
	//sign extend  32 bit
	assign immediate32 = {{16{immediate16[15]}},immediate16[15:0]};	
	
	//branclerde ve sw de registera yazma yok;  
	regMemory regMod(.readReg1(rs),.readReg2(rt),.writeReg(rt),
					.writeData(toReg),.write((~opcode[5]) ~^ opcode[3]),.readData1(RSvalue),.readData2(RTvalue));		
		
	//ALU ya girişi seçen MUX :
	//sadece branclerde RS ve RT girer
	//diğerlerinde Rs ve İmmediate girer.
	assign alu_in = (opcode[5]==0 && opcode[3]==0) ? (RTvalue) : (immediate32);
	
	aluModul aluMod(.OPCode(opcode),.Rs(RSvalue),.Rt(alu_in),
						.Immediate(immediate32),.Result(alu_out),.carryOut(carryOut),
						.Zero(zero),.overFlow(overFlow));
						
	dataMemory datamem(.address(alu_out),.wrEn(opcode[3] && opcode[5]),.data_in(RTvalue),.data_out(myData));
	
	//registere yazılacak veriyi seçme
	//aludanmı yoksa memorydenmi
	//
	assign toReg = (opcode == 6'b100011) ? (myData) : alu_out;
	//branclerde PC güncelleme
	assign pc_in = ( opcode[3]==0 && opcode[5]==0) ? (pc_out + alu_out) : (pc_out + 4 );
	//sonucu outputa yaz
	assign result = alu_out;
		
endmodule

